package templates

templ Head(production bool) {
	<meta charset="UTF-8"/>
	<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
	<meta http-equiv="X-UA-Compatible" content="ie=edge"/>
	<link
		rel="apple-touch-icon"
		sizes="180x180"
		href="/images/apple-touch-icon.png"
	/>
	<link
		rel="icon"
		type="image/png"
		sizes="32x32"
		href="/images/favicon-32x32.png"
	/>
	<link
		rel="icon"
		type="image/png"
		sizes="16x16"
		href="/images/favicon-16x16.png"
	/>
	<link rel="manifest" href="/site.webmanifest"/>
	<link rel="icon" href="/images/favicon.ico"/>
	<title>bilte co</title>
	<meta name="title" content="bilte co"/>
	<meta
		name="description"
		content="Strategy-led software engineering and consulting—delivering impactful results in high-stakes domains."
	/>
	<meta property="og:type" content="website"/>
	<meta property="og:url" content="bilte.co"/>
	<meta property="og:title" content="bilte co"/>
	<meta
		property="og:description"
		content="Strategy-led software engineering and consulting—delivering impactful results in high-stakes domains."
	/>
	<meta property="og:image" content="/images/og-image.jpg"/>
	<meta property="twitter:card" content="summary_large_image"/>
	<meta property="twitter:url" content="bilte.co"/>
	<meta property="twitter:title" content="bilte co"/>
	<meta
		property="twitter:description"
		content="Strategy-led software engineering and consulting—delivering impactful results in high-stakes domains."
	/>
	<meta property="twitter:image" content="/images/og-image.jpg"/>
	<meta name="theme-color" content="#f6f7f8"/>
	// preload fonts
	<link rel="preload" href="/fonts/founders-grotesk-regular.woff2" as="font" type="font/woff2" crossorigin="anonymous"/>
	<link rel="preload" href="/fonts/founders-grotesk-medium.woff2" as="font" type="font/woff2" crossorigin="anonymous"/>
	<link rel="preload" href="/fonts/founders-grotesk-bold.woff2" as="font" type="font/woff2" crossorigin="anonymous"/>
	<link rel="stylesheet" href="/css/styles.css"/>
	if (production) {
		<script>
            !(function (t, e) {
                var o, n, p, r;
                e.__SV ||
                    ((window.posthog = e),
                    (e._i = []),
                    (e.init = function (i, s, a) {
                        function g(t, e) {
                            var o = e.split(".");
                            2 == o.length && ((t = t[o[0]]), (e = o[1])),
                                (t[e] = function () {
                                    t.push(
                                        [e].concat(
                                            Array.prototype.slice.call(
                                                arguments,
                                                0,
                                            ),
                                        ),
                                    );
                                });
                        }
                        ((p = t.createElement("script")).type =
                            "text/javascript"),
                            (p.crossOrigin = "anonymous"),
                            (p.async = !0),
                            (p.src =
                                s.api_host.replace(
                                    ".i.posthog.com",
                                    "-assets.i.posthog.com",
                                ) + "/static/array.js"),
                            (r =
                                t.getElementsByTagName(
                                    "script",
                                )[0]).parentNode.insertBefore(p, r);
                        var u = e;
                        for (
                            void 0 !== a ? (u = e[a] = []) : (a = "posthog"),
                                u.people = u.people || [],
                                u.toString = function (t) {
                                    var e = "posthog";
                                    return (
                                        "posthog" !== a && (e += "." + a),
                                        t || (e += " (stub)"),
                                        e
                                    );
                                },
                                u.people.toString = function () {
                                    return u.toString(1) + ".people (stub)";
                                },
                                o =
                                    "init capture register register_once register_for_session unregister unregister_for_session getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSurveysLoaded onSessionId getSurveys getActiveMatchingSurveys renderSurvey canRenderSurvey canRenderSurveyAsync identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty createPersonProfile opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing clear_opt_in_out_capturing debug getPageViewId captureTraceFeedback captureTraceMetric".split(
                                        " ",
                                    ),
                                n = 0;
                            n < o.length;
                            n++
                        )
                            g(u, o[n]);
                        e._i.push([i, s, a]);
                    }),
                    (e.__SV = 1));
            })(document, window.posthog || []);
            posthog.init("phc_i3AjobMODEfax4FO5q2GRihJR8bSTj8hlw3yMFWZLBN", {
                api_host: "https://us.i.posthog.com",
                person_profiles: "always", // or 'always' to create profiles for anonymous users as well
            });
        </script>
	}
}
